---
- hosts: server
  become: yes
  become_method: sudo
  environment:
    http_proxy: "{{ http_proxy | default() }}"
    https_proxy: "{{ https_proxy | default() }}"
    no_proxy: "{{ no_proxy | default() }}"

  pre_tasks:
  roles:
    - role: trombik.apt_repo
    - role: trombik.java
    - role: trombik.influxdb
    - role: trombik.telegraf
    - role: ansible-role-grafana
  vars:
    apt_repo_keys_to_add:
      - https://repos.influxdata.com/influxdb.key
    apt_repo_to_add:
      - "deb https://repos.influxdata.com/{{ ansible_distribution | lower }} {{ ansible_distribution_release }} stable"
    apt_repo_enable_apt_transport_https: yes
    java_packages: "{% if ansible_os_family == 'FreeBSD' %}[ 'java/openjdk8-jre' ]{% elif ansible_os_family == 'Debian' %}[ 'openjdk-8-jdk' ]{% endif %}"

    flags_grafana:
      FreeBSD: |
        grafana_conf={{ grafana_conf_file }}
      Debian: ""
    grafana_plugins:
      - name: raintank-worldping-app
        state: present
      - name: grafana-worldmap-panel
        state: present

    grafana_flags: "{{ flags_grafana[ansible_os_family] }}"
    grafana_admin_user: admin
    grafana_admin_password: PassWord
    grafana_addr: "{{ ansible_default_ipv4['address'] }}"
    grafana_provisioning_files:
      - name: dashboards/default.yml
        state: present
        format: yaml
        content:
          apiVersion: 1
          providers:
            - name: a unique provider name
              orgId: 1
              folder: My Dashboards
              type: file
              disableDeletion: true
              editable: true
              updateIntervalSeconds: 10
              options:
                path: "{{ grafana_provisioning_dir }}/dashboards/json"
      - name: dashboards/json/dns.json
        content: "{{ lookup('file', 'dns.json') | from_json | to_nice_json }}"

      - name: datasources/influxdb.yml
        state: present
        content: |
          apiVersion: 1
          datasources:
            - name: InfluxDB
              type: influxdb
              access: proxy
              database: mydatabase
              user: read_only
              password: read_only
              url: https://localhost:8086
              jsonData:
                httpMode: GET
                tlsSkipVerify: true
    grafana_config: |
      [paths]
      data = {{ grafana_db_dir }}
      logs = {{ grafana_log_dir }}
      plugins = /var/db/grafana/plugins
      provisioning = {{ grafana_provisioning_dir }}
      [server]
      [database]
      log_queries =
      [session]
      [dataproxy]
      [analytics]
      [security]
      admin_user = {{ grafana_admin_user }}
      admin_password = {{ grafana_admin_password }}
      disable_gravatar = true
      [snapshots]
      [dashboards]
      [users]
      [auth]
      [auth.anonymous]
      [auth.github]
      [auth.google]
      [auth.generic_oauth]
      [auth.grafana_com]
      [auth.proxy]
      [auth.basic]
      enabled = false
      [auth.ldap]
      [smtp]
      [emails]
      [log]
      [log.console]
      [log.file]
      [log.syslog]
      [alerting]
      [metrics]
      [metrics.graphite]
      [tracing.jaeger]
      [grafana_com]
      [external_image_storage]
      [external_image_storage.s3]
      [external_image_storage.webdav]
      [external_image_storage.gcs]
      [external_image_storage.azure_blob]
      [external_image_storage.local]
    x509_certificate_debug_log: yes
    tls_cert_path: "{{ influxdb_conf_dir }}/tls/influxdb.pem"
    tls_key_path: "{{ influxdb_conf_dir }}/tls/influxdb.key"
    x509_certificate:
      - name: influxdb
        state: present
        secret:
          path: "{{ tls_key_path }}"
          group: "{{ influxdb_group }}"
          mode: "0640"
          key: |
            -----BEGIN PRIVATE KEY-----
            MIIEvAIBADANBgkqhkiG9w0BAQEFAASCBKYwggSiAgEAAoIBAQCkNNkBIJ+8atZ1
            nkSUetBCxz9o7nYmGFdw5y+jYMjkBuFnepDDAhiv9yyUSjtsyoVyEEjD9WG5Jm4S
            z78HjU2/n/9/2EBfbQWbrEr/KJ9YKtJLcZJRwlCBmps7dTqJPzJzn0ac3TawowyH
            vBAYTpV/XnS5nZwUwfU9ws2X4STmNxanDsbhT9uH+NBnlh07umkUbNgm8NVr9hn0
            I3BCX3241iCR9HpnotaqG/V7SubxuOzzPvTZbiFhAB5rOMR7tusgB6eZENudEvaV
            7mJAR2tHbGAKxwyf9x8WIvNWQ3qSIfdo6QQuMG2ySdSww2TZI9/k15PNS14ubDPO
            4fqeT3TzAgMBAAECggEAXS/Alus0u3DGFCmlMb4gwkTgr2PkmOnndaM9XbJnT0C4
            WkksLf7ak8HqAp2965di88BaCxsOQkyU2wgamOaP4Nej36GRppXwQNAeH3+mLhrf
            DQF+z/c+SM68mZmFhq3eq88P+6Vui/979Ou9Fo5COO4Zv9y53u3ThyEuG6shjaN8
            9phvJAf+f9xHWpERCHKp05gHdzO7Kf7rZxZ1aSs5re61KaF23f2NGJOKCQXa+EXf
            I9VTcqs/dakKWAcXsSgSlwnCX7CBtsGo6raPor9AB8A8XagdrG7ibEvFksujsfNG
            0BUq2si9ic2xqT24wFPVfmLSyJHUjxk/9w9ARB7zQQKBgQDPKmYadvJBd4xDjKqk
            SIJRlObTQSQHeDyLV0lG3edVZU4QkjWDzeYv9WEPw3OUmIIOFxY9CeZHKvdDLeZv
            wd8uAmi29+mguQWwsEituDwAwqkqnpPu1Db2GZ2trBl+r6d9EETNejVwsyJqQhVF
            kLOWXN+a1tjGRELS17uhO/1yrQKBgQDK6gl+kfa4yrEcv+E0mm2LenHYFF0PYrkG
            OpozFilk4/dGEjPPH0uwvaV1doi3L76ATPUueiIFfIPfeOSINeg7jW3d5bCqBK66
            RpD7/2EiVZ/iH3ZiNg0KILYMIYmyxi6JhW/9w/rSI11pSIYhf798j8kooEsTebuV
            myP8aP0aHwKBgHfas8/D2Ux++atrCp6ZRKwmVZULLukTaxPCoCZb46bIQW3c6REk
            YnSEpm8USR5DTZsRSFBwFcY+2WcIezVVGOXphuO0cnoGEYCzvJik6jIWbQC3Vibq
            qBGhqFP+KZHd1izI6MVoWtqlCNgo+12P5hasDMHsYuXyQCbzoR4bMvrRAoGAJwr1
            HLd1I4VMot2AtaBpJ4c91HfGmClEtKAd/2pqOJFsiL0D3vyEkdNLvNg74hN7sjAc
            lP7HAQs+TId0YYkN0DecRi/l2DDiddESIIq44+RZySaInskLpUE6BgeF+TIMzkUw
            kUFeR4SqepGLzXJJI+x+piSBjZPEtjqNqAmDeb0CgYBxGua7JnSfoiJQnIOnFaX3
            YHp9WFyyfTKA2xUfE7rvX4DvyGGlVTtJNtLqN4+pnU4OfnnuQWoWrYiGkavLNk0e
            qT8tqILjvkLDp+COUvBvOkLUWB4MCQ5zqzPS8i2rUVfkkf4Ggl8sng5Fh3zGiW/6
            6BlD9CUifPiM3aTyAcZLzA==
            -----END PRIVATE KEY-----
        public:
          path: "{{ tls_cert_path }}"
          group: "{{ influxdb_group }}"
          mode: "0640"
          key: |
            -----BEGIN CERTIFICATE-----
            MIIDhTCCAm2gAwIBAgIJAOaHu1Fdx8xyMA0GCSqGSIb3DQEBCwUAMFkxCzAJBgNV
            BAYTAkFVMRMwEQYDVQQIDApTb21lLVN0YXRlMSEwHwYDVQQKDBhJbnRlcm5ldCBX
            aWRnaXRzIFB0eSBMdGQxEjAQBgNVBAMMCWxvY2FsaG9zdDAeFw0xODExMDcwODA4
            MTZaFw0yODExMDQwODA4MTZaMFkxCzAJBgNVBAYTAkFVMRMwEQYDVQQIDApTb21l
            LVN0YXRlMSEwHwYDVQQKDBhJbnRlcm5ldCBXaWRnaXRzIFB0eSBMdGQxEjAQBgNV
            BAMMCWxvY2FsaG9zdDCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAKQ0
            2QEgn7xq1nWeRJR60ELHP2judiYYV3DnL6NgyOQG4Wd6kMMCGK/3LJRKO2zKhXIQ
            SMP1YbkmbhLPvweNTb+f/3/YQF9tBZusSv8on1gq0ktxklHCUIGamzt1Ook/MnOf
            RpzdNrCjDIe8EBhOlX9edLmdnBTB9T3CzZfhJOY3FqcOxuFP24f40GeWHTu6aRRs
            2Cbw1Wv2GfQjcEJffbjWIJH0emei1qob9XtK5vG47PM+9NluIWEAHms4xHu26yAH
            p5kQ250S9pXuYkBHa0dsYArHDJ/3HxYi81ZDepIh92jpBC4wbbJJ1LDDZNkj3+TX
            k81LXi5sM87h+p5PdPMCAwEAAaNQME4wHQYDVR0OBBYEFLlFbMoqiB87C++97460
            1wl2neRzMB8GA1UdIwQYMBaAFLlFbMoqiB87C++974601wl2neRzMAwGA1UdEwQF
            MAMBAf8wDQYJKoZIhvcNAQELBQADggEBAFAPS2iqL1NQvq0wCyb0A5zYw1+c4UbF
            yNAqMVQKzEFIfQ8rfGnFGTCnsV6a977a60O86dZn7PsoaAyXs9FQvn9od/WmUJn8
            eIuSNOT4v0FwGuZgnFkUggski1Wt789TywWbd9q8jaD1gsp333Lx8ItWTu8V8lMb
            DeTKP3ikJlN+Ap2oNqVGHi5uv83HIkVjO9XbF2NOCHXT4gV5IDzoM5069ovRT7O6
            eTIPW1GdjHpjAvQoKJ+vVLcum2HEwgr75SrFOprxNCaz0cfQEjTpKz3iuvkSkTHS
            mep8rM3Zp1alBNlqhPBVyuBO54fhgA6C7QcT8zuEjBJ8MjWyIR+D1+E=
            -----END CERTIFICATE-----

    influxdb_admin_username: admin
    influxdb_admin_password: PassWord
    influxdb_tls: yes
    influxdb_include_x509_certificate: yes
    # the cert is self-signed, do not validate
    influxdb_tls_validate_certs: no
    influxdb_bind_address: 127.0.0.1:8086
    influxdb_databases:
      - database_name: mydatabase
        state: present
    influxdb_users:
      - user_name: foo
        user_password: PassWord
        grants:
          - database: mydatabase
            privilege: ALL
      - user_name: write_only
        user_password: write_only
        grants:
          - database: mydatabase
            privilege: WRITE
      - user_name: read_only
        user_password: read_only
        grants:
          - database: mydatabase
            privilege: READ
    influxdb_config: |
      reporting-disabled = true
      # this one is bind address for backup process
      bind-address = "127.0.0.1:8088"
      [meta]
        dir = "{{ influxdb_db_dir }}/meta"
      [data]
        dir = "{{ influxdb_db_dir }}/data"
        wal-dir = "{{ influxdb_db_dir }}/wal"
        query-log-enabled = true

      [coordinator]
      [retention]
      [shard-precreation]
      [monitor]
      [http]
        auth-enabled = true
        bind-address = "{{ influxdb_bind_address }}"
        https-enabled = true
        https-certificate = "{{ tls_cert_path }}"
        https-private-key = "{{ tls_key_path }}"
        log-enabled = true
        access-log-path = "{{ influxdb_log_dir }}/access.log"
      [ifql]
      [logging]
      [subscriber]
      [[graphite]]
      [[collectd]]
      [[opentsdb]]
      [[udp]]
      [tls]
      # https://docs.influxdata.com/influxdb/v1.7/administration/config/#recommended-server-configuration-for-modern-compatibility
      min-version = "tls1.2"
      max-version = "tls1.2"
      ciphers = [ "TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305",
                  "TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305",
                  "TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256",
                  "TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256",
                  "TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384",
                  "TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384"
      ]
    telegraf_config: |
      [global_tags]
      [agent]
        interval = "10s"
        round_interval = true
        metric_batch_size = 1000
        metric_buffer_limit = 10000
        collection_jitter = "10s"
        flush_interval = "10s"
        flush_jitter = "0s"
        precision = ""
        debug = false
        quiet = false
        logfile = "{{ telegraf_log_dir }}/telegraf.log"
        hostname = "{{ ansible_hostname }}"
        omit_hostname = false
      [[inputs.cpu]]
        percpu = true
        totalcpu = true
        collect_cpu_time = false
        report_active = false
      [[inputs.disk]]
        ignore_fs = ["tmpfs", "devtmpfs", "devfs", "overlay", "aufs", "squashfs"]
      [[inputs.diskio]]
      [[inputs.kernel]]
      [[inputs.mem]]
      [[inputs.processes]]
      [[inputs.socket_listener]]
        service_address = "tcp://127.0.0.1:8094"
        data_format = "influx"
      [[inputs.influxdb]]
        urls = [
          "https://localhost:8086/debug/vars"
        ]
        insecure_skip_verify = true
      # broken at the moment. https://bugs.freebsd.org/bugzilla/show_bug.cgi?id=240570
      #[[inputs.swap]]
      [[inputs.system]]
      [[inputs.dns_query]]
        servers = ["a.root-servers.net.", "b.root-servers.net.", "c.root-servers.net."]
        domains = ["."]
        record_type = "NS"
      [[inputs.dns_query]]
        servers = ["a.dns.jp", "b.dns.jp", "c.dns.jp"]
        domains = ["jp."]
        record_type = "NS"
      [[inputs.http_response]]
        address = "https://example.org"
      [[outputs.influxdb]]
        urls = ["https://127.0.0.1:8086"]
        database = "mydatabase"
        username = "write_only"
        password = "write_only"
        skip_database_creation = true
        insecure_skip_verify = true
